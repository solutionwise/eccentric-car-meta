<template>
  <div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <header class="bg-white shadow-sm border-b">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
          <div class="flex items-center">
            <h1 class="text-xl font-semibold text-gray-900">Eccentric Car Finder</h1>
          </div>
          <div class="flex items-center space-x-4">
            <NuxtLink to="/admin">
              <Button variant="ghost">Admin</Button>
            </NuxtLink>
            <!-- <NuxtLink to="/login">
              <Button variant="ghost">Login</Button>
            </NuxtLink> -->
            <!-- <Button variant="ghost" @click="logout">Logout</Button> -->
            <!-- <NuxtLink to="/shadcn-test">
              <Button variant="outline" size="sm">UI Test</Button>
            </NuxtLink> -->
          </div>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <!-- Search Section -->
      <div class="mb-8">
        <div class="max-w-2xl mx-auto">
          <h2 class="text-2xl font-bold text-gray-900 mb-4">Search Images</h2>
          <div class="flex space-x-4">
            <Input
              v-model="searchQuery"
              type="text"
              placeholder="Describe what you're looking for..."
              class="flex-1"
              @keyup.enter="searchImages"
            />
            <Button
              @click="searchImages"
              :disabled="loading"
            >
              {{ loading ? 'Searching...' : 'Search' }}
            </Button>
          </div>
        </div>
      </div>

      <!-- Results Section -->
      <div v-if="results.length > 0" class="mb-8">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Search Results</h3>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          <Card
            v-for="result in results"
            :key="result.id"
            class="overflow-hidden cursor-pointer hover:shadow-md transition-shadow"
            @click="openModal(result)"
          >
            <img
              :src="getImageUrl(result.filename)"
              :alt="result.filename"
              class="w-full h-48 object-cover"
            />
            <div class="p-4">
              <h4 class="font-medium text-foreground truncate">{{ result.filename }}</h4>
              <div class="flex items-center justify-between mt-2">
                <p class="text-sm text-muted-foreground">Similarity:</p>
                <Badge variant="secondary">{{ (result.similarity * 100).toFixed(1) }}%</Badge>
              </div>
              
              <!-- Tags Display -->
              <div class="mt-3">
                <TagDisplay :tags="result.tags || []" />
              </div>
            </div>
          </Card>
        </div>
      </div>

      <!-- No Results -->
      <div v-if="!loading && results.length === 0 && hasSearched" class="text-center py-12">
        <p class="text-gray-500">No images found matching your search.</p>
      </div>
    </main>

    <!-- Image Modal -->
    <div
      v-if="selectedImage"
      class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
      @click="closeModal"
    >
      <div class="bg-white rounded-lg max-w-4xl max-h-[90vh] overflow-hidden" @click.stop>
        <div class="p-6">
          <div class="flex justify-between items-start mb-4">
            <h3 class="text-lg font-semibold">{{ selectedImage.filename }}</h3>
            <button @click="closeModal" class="text-gray-400 hover:text-gray-600">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          <img
            :src="selectedImage.url"
            :alt="selectedImage.filename"
            class="max-w-full max-h-[70vh] object-contain mx-auto"
          />
          <div class="mt-4 text-sm text-gray-600">
            <p>Similarity Score: {{ (selectedImage.similarity * 100).toFixed(1) }}%</p>
            <p>Uploaded: {{ new Date(selectedImage.uploadedAt).toLocaleDateString() }}</p>
            
            <!-- Tags in Modal -->
            <div class="mt-3">
              <p class="text-sm font-medium text-gray-700 mb-2">Tags:</p>
              <TagDisplay :tags="selectedImage.tags || []" />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue'

// Reactive data
const searchQuery = ref('')
const results = ref([])
const loading = ref(false)
const hasSearched = ref(false)
const selectedImage = ref(null)

// API composable
const { apiCall } = useApi()

// Methods
const searchImages = async () => {
  if (!searchQuery.value.trim()) return
  
  loading.value = true
  hasSearched.value = true
  
  try {
    const response = await apiCall('/api/search', {
      method: 'POST',
      body: {
        query: searchQuery.value
      }
    })
    results.value = response.results || []
  } catch (error) {
    console.error('Search error:', error)
    results.value = []
  } finally {
    loading.value = false
  }
}

const getImageUrl = (filename) => {
  const apiBaseUrl = useRuntimeConfig().public.apiBase
  return `${apiBaseUrl}/uploads/${filename}`
}

const openModal = (image) => {
  selectedImage.value = image
}

const closeModal = () => {
  selectedImage.value = null
}

const logout = async () => {
  try {
    const { $auth } = useNuxtApp()
    if ($auth && typeof $auth.removeToken === 'function') {
      $auth.removeToken()
    }
    // Stay on the same page since search is now public
    window.location.reload()
  } catch (error) {
    console.error('Logout error:', error)
  }
}

// Page is now accessible without authentication for search functionality
onMounted(async () => {
  // No authentication check needed - search is now public
})
</script>
